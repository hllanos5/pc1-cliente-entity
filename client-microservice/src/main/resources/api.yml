openapi: 3.0.0
info:
  title: Client Microservice
  description: Client Microservice
  version: 1.0.0
servers:
  - url: http://localhost:8585
paths:
  /client:
    post:
      tags:
        - client
      summary: Add a new client to the database
      description: Add a new client to the database
      operationId: createClient
      requestBody:
        description: Create a new client in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "405":
          description: Invalid input
    get:
      tags:
        - client
      summary: List all clients from the database
      description: List all clients from the database
      operationId: findAllClient
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
        "204":
          description: No clients found
        "405":
          description: Invalid input
  /client/{id}:
    get:
      tags:
        - client
      summary: Find client by ID
      description: Returns a single client
      operationId: getClientById
      parameters:
        - name: id
          in: path
          description: Id of client to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "400":
          description: Invalid ID supplied
        "404":
          description: Client not found
    delete:
      tags:
        - client
      summary: Delete a client
      description: delete a client
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          description: Client id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid client value
    put:
      tags:
        - client
      summary: Update an existing client
      description: Update an existing client by Id
      operationId: updateClient
      parameters:
        - name: id
          in: path
          description: ID of client to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent client in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer not found
        "405":
          description: Validation exception
  /client/dni/{dni}:
    get:
      tags:
        - client
      summary: Find client by DNI
      description: Returns a single client
      operationId: getClientByDNI
      parameters:
        - name: dni
          in: path
          description: DNI of client to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "400":
          description: Invalid DNI supplied
        "404":
          description: Client not found
components:
  schemas:
    Response:
      type: object
      additionalProperties:
        type: object
    Client:
      required:
        - dni
        - names
        - surnames
        - email
        - phone
        - type
      type: object
      properties:
        id:
          type: string
          readOnly: true
        dni:
          type: string
          description: DNI
          minimum: 8
          maximum: 8
          pattern: '[0-9]{8}'
          example: "70000000"
        names:
          type: string
          description: Names
          pattern: '^(?=.{3,15}$)[A-ZÁÉÍÓÚ][a-zñáéíóú]+(?: [A-ZÁÉÍÓÚ][a-zñáéíóú]+)?$'
          example: Hans Jonathan
        surnames:
          type: string
          description: Surnames
          pattern: '^(?=.{3,15}$)[A-ZÁÉÍÓÚ][a-zñáéíóú]+(?: [A-ZÁÉÍÓÚ][a-zñáéíóú]+)?$'
          example: Llanos Chavez
        email:
          type: string
          description: email
          pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$'
          example: hans.llanos@gmail.com
        phone:
          type: string
          description: phone
          pattern: '(\+51|51|)[0-9]+'
          example: "+51940000000"
        type:
          type: string
          description: type
          example: "Personal"
  requestBodies:
    client:
      description: client object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Client'